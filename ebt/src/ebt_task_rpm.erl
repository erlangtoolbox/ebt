%% Copyright
-module(ebt_task_rpm).
-author("Volodymyr Kyrychenko <vladimirk.kirichenko@gmail.com>").

-compile({parse_transform, do}).

-behaviour(ebt_task).

%% API
-export([perform/3]).

perform(Target, Dir, Config) ->
    do([error_m ||
        prepare_environment(Config),
        prepare_spec(Target, Dir, Config),
        SpecFile <- spec_file(Dir, Config),
        case ebt_xl_shell:command(ebt_xl_string:format("rpmbuild -v -bb ~p", [SpecFile])) of
            {ok, Stdout} ->
                io:format("~s", [Stdout]);
            {error, {_, Stdout}} ->
                io:format("~s", [Stdout]),
                {error, "rpmbuild failed"}

        end
    ]).

prepare_environment(Config) ->
    do([error_m ||
        RPMBuildDir <- ebt_config:outdir(rpmbuild, Config),
        ebt_xl_file:mkdirs(RPMBuildDir ++ "/BUILD"),
        ebt_xl_file:mkdirs(RPMBuildDir ++ "/BUILDROOT"),
        ebt_xl_file:mkdirs(RPMBuildDir ++ "/RPMS"),
        ebt_xl_file:mkdirs(RPMBuildDir ++ "/SOURCES"),
        ebt_xl_file:mkdirs(RPMBuildDir ++ "/SPECS"),
        ebt_xl_file:mkdirs(RPMBuildDir ++ "/SRPMS")
    ]).

prepare_spec(Target, Dir, Config) ->
    do([error_m ||
        RPMBuildDir <- ebt_config:outdir(rpmbuild, Config),
        AppProdDir <- ebt_config:app_outdir(production, Dir, Config),
        AppName <- ebt_config:appname_full(Dir, Config),
        SpecTemplate <- ebt_xl_escript:read_file("priv/rpmbuild/otpapp.spec"),
        Template <- return(ebt_xl_string:substitute(binary_to_list(SpecTemplate), [
            {'APPNAME', AppName},
            {'DESCRIPTION', ebt_config:value(Target, Config, description, "")}
        ], {$@, $@})),
        Header <- header(Target, Dir, Config),
        SpecFile <- spec_file(Dir, Config),
        ebt_xl_file:write_file(SpecFile, iolist_to_binary([
            "#Spec generated by Erlang Build Tool\n\n",
            "%define _topdir " ++ RPMBuildDir ++ "\n",
            "%define _builddir " ++ AppProdDir ++ "\n",
            Header,
            Template
        ]))
    ]).

spec_file(Dir, Config) ->
    do([error_m ||
        AppName <- ebt_config:appname(Dir),
        SpecsDir <- ebt_config:outdir(rpmbuild, Config, "SPECS"),
        return(SpecsDir ++ "/" ++ AppName ++ ".spec")
    ]).


header(Target, Dir, Config) ->
    do([error_m ||
        AppName <- ebt_config:appname(Dir),
        Version <- ebt_config:version(Config),
        Build <- ebt_config:build_number(Config),
        Values <- return([
            {'Name', AppName},
            {'Release', Build ++ "%{?dist}"},
            {'Version', Version} | ebt_config:value(Target, Config, header, [])]),
        return(ebt_xl_string:join([ebt_xl_string:format("~s: ~s~n", [N, V]) || {N, V} <- Values]))
    ]).
