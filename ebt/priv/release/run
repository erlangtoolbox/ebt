#!/bin/sh

### BEGIN INIT INFO
# Provides:          @APPNAME@
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Description        @APPNAME@
# Short-Description: @APPNAME@
### END INIT INFO

_rc_status=0

rc_reset()
{
    _rc_status=0
    return 0
}

rc_status()
{
    case $_rc_status in
        0) echo -e " ...done";;
        1) echo -e " ...failed";;
        2) echo -e " ...missed";;
        3) echo -e " ...running";;
        *) echo -e " ...done";;
    esac
    return $_rc_status
}

rc_failed()
{
    _rc_status=$1
    return $_rc_status
}

rc_exit() {
    exit $_rc_status
}

cd `dirname $0`/..
BASE=`pwd`
APPNAME=`basename $0`

# Default heart settings
ERL_CRASH_DUMP_SECONDS=-1
ERL_CRASH_DUMP=/tmp/${APPNAME}_crash.dump
HEART_BEAT_TIMEOUT=30
HEART_COMMAND="$BASE/bin/$APPNAME start"

. $BASE/etc/$APPNAME.rc

export ERL_CRASH_DUMP_SECONDS
export ERL_CRASH_DUMP
export HEART_BEAT_TIMEOUT
export HEART_COMMAND

DATA=`cat $BASE/releases/start_erl.data`
ERTS_VSN=${DATA% *}
APP_VSN=${DATA#* }
ERL_BIN=$BASE/erts-$ERTS_VSN/bin/erl

suexec()
{
    if [ "$USER" != "$SU" -a ! -z "$SU" ]
    then
        su $SU -c '"$0" "$@"' -- "$@"
        [ $? -ne 0 ] && rc_failed 1
    else
        $@
        [ $? -ne 0 ] && rc_failed 1
    fi
}

rc_reset

function is_running
{
    PING=`$ERL_BIN -name clean_$RANDOM@127.0.0.1 -setcookie $COOKIE \
        -boot $BASE/releases/$APP_VSN/$CLEAN_BOOT -noshell \
        -eval "net_kernel:hidden_connect_node('$NODE_NAME'),
            R = net_adm:ping('$NODE_NAME'),
            io:format(\"~p~n\", [R])." -s init stop`
    [ "$PING" = "pong" ]
}

case "$1" in
    run)
        if is_running
        then
            echo -n "$APPNAME is already running"
            rc_failed 1
            rc_status
        else
            suexec $ERL_BIN -args_file $BASE/etc/$APPNAME.vm.args -setcookie $COOKIE \
                -name $NODE_NAME -boot $BASE/releases/$APP_VSN/$APPNAME \
                -config $BASE/etc/$APPNAME
        fi
        ;;
    start)
        if is_running
        then
            echo -n "$APPNAME is already running"
            rc_failed 1
        else
            echo -n "Starting $APPNAME "
            if [ "$HEART" = "yes" ]
            then
                HEART_ENABLED=-heart
            fi
            suexec $ERL_BIN -args_file $BASE/etc/$APPNAME.vm.args -setcookie $COOKIE \
                -name $NODE_NAME -boot $BASE/releases/$APP_VSN/$APPNAME \
                -config $BASE/etc/$APPNAME -noshell -detached $HEART_ENABLED
        fi
        rc_status
        ;;
    attach)
        echo -n "Attaching to $APPNAME "
        if is_running
        then
            echo
            $ERL_BIN -name clean_$RANDOM@127.0.0.1 -setcookie $COOKIE \
                -boot $BASE/releases/$APP_VSN/$CLEAN_BOOT -remsh $NODE_NAME
        else
            rc_failed 2
            rc_status
        fi
        ;;
    stop)
        echo -n "Stopping $APPNAME "
        if is_running
        then
            $ERL_BIN -name clean_$RANDOM@127.0.0.1 -setcookie $COOKIE \
                -boot $BASE/releases/$APP_VSN/$CLEAN_BOOT \
                -noshell -eval "rpc:call('$NODE_NAME', init, stop, [])" -s init stop
        else
            rc_failed 2
        fi
        rc_status
        ;;
    status)
        echo -n "Checking for $APPNAME"
        if is_running
        then
            rc_failed 3
        else
            rc_failed 2
        fi
        rc_status
        ;;
    call)
        if is_running
        then
            $ERL_BIN -name clean_$RANDOM@127.0.0.1 -setcookie $COOKIE \
                -boot $BASE/releases/$APP_VSN/$CLEAN_BOOT \
                -noshell -eval "R = rpc:call('$NODE_NAME', '$2', '$3', [$4]), io:format(\"~p\",[R])" -s init stop
        else
            rc_failed 2
            rc_status
        fi
        ;;
    profile)
        case "$2" in
            start)
                echo -n "Starting profiling"
                if is_running
                then
                    $ERL_BIN -name clean_$RANDOM@127.0.0.1 -setcookie $COOKIE \
                        -boot $BASE/releases/$APP_VSN/$CLEAN_BOOT \
                        -noshell -eval "ok=rpc:call('$NODE_NAME', fprof, trace, [[start, {procs, all}, {file, \"/tmp/$NODE_NAME.trace\"}]])" -s init stop
                else
                    rc_failed 2
                fi
            ;;
            stop)
                echo "Stopping profiling"
                if is_running
                then
                    $ERL_BIN -name clean_$RANDOM@127.0.0.1 -setcookie $COOKIE \
                        -boot $BASE/releases/$APP_VSN/$CLEAN_BOOT \
                        -noshell -eval "\
                            ok=rpc:call('$NODE_NAME', fprof, trace, [stop]),\
                            ok=fprof:profile(file, \"/tmp/$NODE_NAME.trace\"),\
                            ok=fprof:analyse(dest, \"/tmp/$NODE_NAME.analyse\")\
                        " -s init stop
                else
                    rc_failed 2
                fi
            ;;
            *)
                echo "Usage: $APPNAME profile {start|stop}"
                exit 1
                ;;
        esac
        rc_status
        ;;
    *)
        echo "Usage: $APPNAME {run|start|stop|attach|status|profile <start|stop>|call <module> <fun> <args>}"
        exit 1
        ;;
esac
rc_exit
